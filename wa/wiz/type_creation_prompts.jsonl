{"prompt":"Create type IAssist with attributes id, prompt, promptResult.","completion":" export type IAssist = {\n  id: string;\n  prompt: string;\n  promptResult: string[];\n};"}
{"prompt":"Create type ITranscriptMessage with attributes words, duration, timestamp, username.","completion":" export type ITranscriptMessage = {\n  words: string;\n  duration: number;\n  timestamp: string;\n  username: string;\n}"}
{"prompt":"Create type IBookingTranscript which implements ITranscriptMessage with attributes username, messages.","completion":" export type IBookingTranscript = {\n  username: string;\n  messages: ITranscriptMessage[];\n}"}
{"prompt":"Create type IBooking which implements IQuote, IBookingTranscript with attributes quoteId, quoteSub, transcripts.","completion":" export type IBooking = IQuote & {\n  quoteId: string;\n  quoteSub: string;\n  transcripts: IBookingTranscript[];\n};"}
{"prompt":"Create type IContact with attributes id, name, email, phone.","completion":" export type IContact = {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n};"}
{"prompt":"Create type IExchange which implements IBooking with attributes booking.","completion":" export type IExchange = {\n  booking: IBooking;  \n};"}
{"prompt":"Create type IFeedback with attributes id, message, groupName, createdOn, username.","completion":" export type IFeedback = {\r\n  id: string;\r\n  message: string;\r\n  groupName: string;\r\n  createdOn: string;\r\n  username: string;\r\n}"}
{"prompt":"Create type IFileType with attributes id, name.","completion":" export type IFileType = {\n  id: string;\n  name: string;\n}"}
{"prompt":"Create type IFile with attributes id, fileTypeId, fileTypeName, name, location.","completion":" export type IFile = {\n  id: string;\n  fileTypeId: string;\n  fileTypeName: string;\n  name: string;\n  location: string;\n}"}
{"prompt":"Create type IField with attributes i, l, v, h, t, d, r.","completion":" export type IField = Record<string, string | boolean> & {\n  i?: string; // id\n  l: string; // label\n  v?: string; // value\n  h?: string; // helperText\n  t?: string; // type\n  d?: string; // defaultValue\n  r?: boolean; // required\n};"}
{"prompt":"Create type IFormTemplate which implements IField.","completion":" export type IFormTemplate = Record<string, IField[]>;"}
{"prompt":"Create type IFormSubmission.","completion":" export type IFormSubmission = Record<string, string[]>;"}
{"prompt":"Create type IFormVersionSubmission which implements IFormSubmission with attributes id, formVersionId, submission.","completion":" export type IFormVersionSubmission = {\n  id?: string;\n  formVersionId: string;\n  submission: IFormSubmission;\n};"}
{"prompt":"Create type IFormVersion which implements IFormTemplate, IFormSubmission with attributes id, formId, form, submission, createdOn, createdSub.","completion":" export type IFormVersion = {\n  id: string;\n  formId: string;\n  form: IFormTemplate;\n  submission: IFormSubmission;\n  createdOn: string;\n  createdSub: string;\n};"}
{"prompt":"Create type IForm which implements IFormVersion with attributes id, name, version, createdOn, createdSub.","completion":" export type IForm = {\n  id: string;\n  name: string;\n  version: IFormVersion;\n  createdOn: string;\n  createdSub: string;\n};"}
{"prompt":"Create type IGroupForm which implements IForm with attributes id, groupId, formId, groupName.","completion":" export type IGroupForm = IForm & {\n  id: string;\n  groupId: string;\n  formId: string;\n  groupName: string;\n};"}
{"prompt":"Create type IGroupRole which implements IRole with attributes groupId, roleId, externalId.","completion":" export type IGroupRole = IRole & {\n  groupId: string;\n  roleId: string;\n  externalId: string;\n}"}
{"prompt":"Create type IGroupScheduleDateSlots with attributes weekStart, startTime, startDate, scheduleBracketSlotId, hour, minute, time.","completion":" export type IGroupScheduleDateSlots = {\n  weekStart: string;\n  startTime: string;\n  startDate: string;\n  scheduleBracketSlotId: string;\n  hour: number;\n  minute: number;\n  time: dayjs.Dayjs;\n}"}
{"prompt":"Create type IGroupSchedule which implements ISchedule with attributes master, groupId, scheduleId, groupName.","completion":" export type IGroupSchedule = ISchedule & {\n  master: true;\n  groupId: string;\n  scheduleId: string;\n  groupName: string;\n};"}
{"prompt":"Create type IGroupServiceAddon which implements IServiceAddon with attributes groupId.","completion":" export type IGroupServiceAddon = IServiceAddon & {\n  groupId: string;\n};"}
{"prompt":"Create type IGroupService which implements IService with attributes groupId, groupName, serviceId, ids.","completion":" export type IGroupService = IService & {\n  groupId: string;\n  groupName: string;\n  serviceId: string;\n  ids: string[];\n};"}
{"prompt":"Create type IGroupUserScheduleStubReplacement with attributes username, slotDate, startTime, scheduleBracketSlotId, serviceTierId, groupName, quoteId.","completion":" export type IGroupUserScheduleStubReplacement = {\n  username: string;\n  slotDate: string;\n  startTime: string;\n  scheduleBracketSlotId: string;\n  serviceTierId: string;\n  groupName: string;\n  quoteId: string;\n}"}
{"prompt":"Create type IGroupUserScheduleStub which implements IGroupUserScheduleStubReplacement with attributes groupScheduleId, userScheduleId, quoteId, slotDate, startTime, serviceName, tierName, replacement.","completion":" export type IGroupUserScheduleStub = {\n  groupScheduleId: string;\n  userScheduleId: string;\n  quoteId: string;\n  slotDate: string;\n  startTime: string;\n  serviceName: string;\n  tierName: string;\n  replacement: IGroupUserScheduleStubReplacement;\n}"}
{"prompt":"Create type IGroupUserSchedule which implements ISchedule, IService with attributes id, groupScheduleId, userScheduleId, services, groupName.","completion":" export type IGroupUserSchedule = ISchedule & {\n  id: string;\n  groupScheduleId: string;\n  userScheduleId: string;\n  services: Record<string, IService>;\n  groupName: string;\n}"}
{"prompt":"Create type IGroupUser which implements IUserProfile with attributes groupId, userId, userSub, externalId, groupExternalId, roleId, roleName, groupName.","completion":" export type IGroupUser = IUserProfile & {\n  groupId: string;\n  userId: string;\n  userSub: string;\n  externalId: string;\n  groupExternalId: string;\n  roleId: string;\n  roleName: string;\n  groupName: string;\n};"}
{"prompt":"Create type IGroupUsers which implements IGroupUser.","completion":" export type IGroupUsers = Record<string, IGroupUser>;"}
{"prompt":"Create type IGroup which implements IRole, IUserProfile, IGroupRoleAuthActions with attributes id, externalId, createdSub, createdOn, defaultRoleId, allowedDomains, name, purpose, code, usersCount, roles, users, availableGroupAssignments, isValid, needCheckName, checkingName, checkedName, error.","completion":" export type IGroup = {\n  id: string;\n  externalId: string;\n  createdSub: string;\n  createdOn: string;\n  defaultRoleId: string;\n  allowedDomains: string;\n  name: string;\n  purpose: string;\n  code: string;\n  usersCount: number;\n  roles: Record<string, IRole>;\n  users: Record<string, IUserProfile>;\n  availableGroupAssignments: Record<string, IGroupRoleAuthActions>;\n\n  isValid: boolean;\n  needCheckName: boolean;\n  checkingName: boolean;\n  checkedName: string;\n  error: Error | string;\n}"}
{"prompt":"Create type ILookup with attributes id, name.","completion":" export type ILookup = {\n  id: string;\n  name: string;\n}"}
{"prompt":"Create type IPayment with attributes id, contactId, details.","completion":" export type IPayment = {\n  id: string;\n  contactId: string;\n  details: AnyRecord;\n};"}
{"prompt":"Create type IUserProfile which implements IQuote, IBooking, IGroup, IRole with attributes id, sub, email, username, firstName, lastName, image, createdOn, updatedOn, locked, quotes, seenQuotes, bookings, seenBookings, groups, roles, availableUserGroupRoles.","completion":" export type IUserProfile = {\r\n  id: string;\r\n  sub: string;\r\n  email: string;\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  image: string;\r\n  createdOn: string;\r\n  updatedOn: string;\r\n  locked: boolean;\r\n  quotes: Record<string, IQuote>;\r\n  seenQuotes: boolean;\r\n  bookings: Record<string, IBooking>;\r\n  seenBookings: boolean;\r\n  groups: Record<string, IGroup>;\r\n  roles: Record<string, IRole>;\r\n  availableUserGroupRoles: UserGroupRoles;\r\n};"}
{"prompt":"Create type IQuote which implements IFormVersionSubmission, IFormVersionSubmission with attributes id, slotDate, startTime, username, serviceTierId, serviceTierName, serviceName, scheduleBracketSlotId, serviceFormVersionSubmissionId, tierFormVersionSubmissionId, serviceForm, tierForm, createdSub, createdOn.","completion":" export type IQuote = {\n  id: string;\n  slotDate: string;\n  startTime: string;\n  username: string;\n  serviceTierId: string;\n  serviceTierName: string;\n  serviceName: string;\n  scheduleBracketSlotId: string;\n  serviceFormVersionSubmissionId: string;\n  tierFormVersionSubmissionId: string;\n  serviceForm?: IFormVersionSubmission;\n  tierForm?: IFormVersionSubmission;\n  createdSub: string;\n  createdOn: string;\n};"}
{"prompt":"Create type IRole with attributes id, name, createdOn.","completion":" export type IRole = {\n  id: string;\n  name: string;\n  createdOn: string;\n}"}
{"prompt":"Create type IScheduleBracketSlot with attributes id, scheduleBracketId, startTime.","completion":" export type IScheduleBracketSlot = {\n  id: string;\n  scheduleBracketId: string;\n  startTime: string;\n}"}
{"prompt":"Create type IScheduleBracket which implements IService, IScheduleBracketSlot, IQuote with attributes id, automatic, scheduleId, duration, multiplier, services, slots, quotes, createdOn.","completion":" export type IScheduleBracket = {\n  id: string;\n  automatic: boolean;\n  scheduleId: string;\n  duration: number;\n  multiplier: string;\n  services: Record<string, IService>;\n  slots: Record<string, IScheduleBracketSlot>;\n  quotes: Record<string, IQuote>;\n  createdOn: string;\n};"}
{"prompt":"Create type ISchedule which implements ITimeUnitNames, ITimeUnitNames, ITimeUnitNames, IScheduleBracket with attributes id, name, startTime, endTime, timezone, scheduleTimeUnitId, scheduleTimeUnitName, bracketTimeUnitId, bracketTimeUnitName, slotTimeUnitId, slotTimeUnitName, slotDuration, brackets, createdOn.","completion":" export type ISchedule = {\n  id: string;\n  name: string;\n  startTime: string;\n  endTime: string;\n  timezone: string;\n  scheduleTimeUnitId: string;\n  scheduleTimeUnitName: ITimeUnitNames;\n  bracketTimeUnitId: string;\n  bracketTimeUnitName: ITimeUnitNames;\n  slotTimeUnitId: string;\n  slotTimeUnitName: ITimeUnitNames;\n  slotDuration: number;\n  brackets: Record<string, IScheduleBracket>;\n  createdOn: string;\n};"}
{"prompt":"Create type IServiceAddon with attributes id, name, order, createdOn.","completion":" export type IServiceAddon = {\n  id: string;\n  name: string;\n  order: number;\n  createdOn: string;\n};"}
{"prompt":"Create type IServiceTier which implements IServiceAddon with attributes id, serviceId, formId, name, multiplier, addons, order, createdOn.","completion":" export type IServiceTier = {\n  id: string;\n  serviceId: string;\n  formId: string;\n  name: string;\n  multiplier: string;\n  addons: Record<string, IServiceAddon>;\n  order: number;\n  createdOn: string;\n};"}
{"prompt":"Create type IService which implements IServiceTier with attributes id, name, cost, tiers, formId, createdOn.","completion":" export type IService = {\n  id: string;\n  name: string;\n  cost: string;\n  tiers: Record<string, IServiceTier>;\n  formId: string;\n  createdOn: string;\n};"}
{"prompt":"Create type ITimeUnitNames.","completion":" export type ITimeUnitNames = string | ('minute' | 'hour' | 'day' | 'week' | 'month' | 'year');"}
{"prompt":"Create type ITimeUnit which implements ITimeUnitNames with attributes id, name.","completion":" export type ITimeUnit = {\n  id: string;\n  name: ITimeUnitNames;\n};"}
