# docker-compose up -d --build
# docker-compose logs -f -t
# docker-compose top

version: '3.9'
services:
  app:
    image: wcapp # typescript cra react project hosted on nginx
    build:
      context: ./
      dockerfile: ./app/Dockerfile
    ports:
      - 443:443
    volumes:
      - node_modules:/app/node_modules
  auth: # keycloak
    image: wcauth
    build: ./auth
    ports:
      - 8443:8443
    environment:
      - KC_HOSTNAME_ADMIN_URL=https://192.168.1.53/auth
      - KC_HOSTNAME_URL=https://192.168.1.53/auth
      - KC_PROXY=edge
      - KC_HOSTNAME_STRICT_BACKCHANNEL=true
      - KC_KEYCLOAK_USER=admin
      - KC_KEYCLOAK_PASSWORD=kcpass
      - KC_DB_URL=jdbc:postgresql://192.168.1.53:8082/sysmaindb
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
    depends_on:
      - db
  sock: # websocket server
    image: wcsock
    build: ./sock
    ports:
      - 8081:8080
    volumes:
      - node_modules:/app/node_modules
  db: # postgres
    image: wcdb
    ports:
      - 8082:5432
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
  api: # express passport for keycloak auth
    image: wcapi
    user: node
    build:
      context: ./
      dockerfile: ./api/Dockerfile
    ports:
      - 8083:9443
    environment:
      - PG_HOST=192.168.1.53
      - PG_PORT=8082
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DATABASE=sysmaindb
      - NODE_TLS_REJECT_UNAUTHORIZED=0 # Remove when having cert - otherwise keycloak blocks redirects
    depends_on:
      - db
    # volumes:
      # - ./core:/core # added for dev
      # - ./api:/app # added for dev
      # - node_modules:/app/node_modules
  turn: # STUN/TURN server for WebRTC
    image: coturn/coturn
    network_mode: 'host'
    restart: always
    volumes:
      - ./turn/turnserver.conf:/etc/coturn/turnserver.conf

volumes:
  pgdata:
    external: true
  node_modules:
    external: true