map $http_origin $allow_origin {
  ~^https?://(.*\.)?domain-name(:\d+)?$ $http_origin;
  default "";
}

map $request_uri $loggable {
  ~^/auth/realms/.*/protocol/openid-connect/token  0;
  default             1;
}

upstream sock {
  server svc-host:8888;
}

server_tokens off;

log_format combined_extra '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time "$upstream_cache_status" '
                          '"$upstream_http_x_cache_status" ';

access_log syslog:server=svc-host:1514,tag=nginx_access combined_extra if=$loggable;
error_log syslog:server=svc-host:1514,tag=nginx_error;

limit_req_zone $binary_remote_addr zone=rate_limit:10m rate=50r/s;

gzip_types text/plain application/javascript application/json;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied any;

proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m use_temp_path=off;

server {
  listen 80;
  server_name domain-name www.domain-name;
  
  add_header X-Xss-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "DENY" always;
  add_header Strict-Transport-Security 'max-age=31536000' always;
  add_header Content-Security-Policy "default-src 'self'; font-src 'self' https://fonts.googleapis.com; img-src 'self'; script-src 'self' 'unsafe-inline' blob:; style-src 'self' 'unsafe-inline'; frame-src 'self'; connect-src wss://domain-name https://domain-name blob:; frame-ancestors https://domain-name https://host-ts-ip:8443" always;
  add_header Referrer-Policy "origin" always;
  
  proxy_buffers 4 24k;
  proxy_buffer_size 24k;

  large_client_header_buffers 4 24k;

  modsecurity on;
  modsecurity_rules_file /etc/nginx/modsec/main.conf;

  location / {
    modsecurity off;
    limit_req zone=rate_limit burst=20 nodelay;
    proxy_pass https://host-ts-ip;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location ~* \.(css|js|map|ico)$ {
    modsecurity off;
    limit_req zone=rate_limit burst=20 nodelay;
    proxy_pass https://host-ts-ip;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_cache static_cache;
    proxy_cache_valid 200 304 1d;
    proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    add_header Cache-Control "public, max-age=86400";
    add_header X-Cache-Status $upstream_cache_status;
  }
  
  location /health {
    limit_req zone=rate_limit;
    default_type text/plain;
    return 200 'true';
  }

  location /sock/ {
    limit_req zone=rate_limit;

    proxy_read_timeout 300s;
    proxy_connect_timeout 75s;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_pass http://sock/;
    
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
  }
}
