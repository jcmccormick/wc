docker exec -u postgres <containerId> psql sysmaindb postgres -f /docker-entrypoint-initdb.d/2-base_views.sql

// Query to file
docker exec -u postgres <containerId> psql sysmaindb -c "SELECT 1" >> query.test

DROP uuids

TRUNCATE TABLE group_services CASCADE;
TRUNCATE TABLE uuid_service_addons CASCADE;
TRUNCATE TABLE uuid_quotes CASCADE;
TRUNCATE TABLE uuid_payments CASCADE;
TRUNCATE TABLE uuid_bookings CASCADE;
TRUNCATE TABLE uuid_groups CASCADE;
TRUNCATE TABLE uuid_roles CASCADE;
TRUNCATE TABLE uuid_files CASCADE;
TRUNCATE TABLE uuid_notes CASCADE;


RESTART FRESH USERS TABLE:


  INSERT INTO
    dbtable_schema.file_types (name)
  VALUES
    ('images'),
    ('documents');

    

  INSERT INTO
    dbtable_schema.budgets (name)
  VALUES
    ('\$500 - \$1,000'),
    ('\$1,000 - \$10,000'),
    ('\$10,000 - \$100,000');

    

  INSERT INTO
    dbtable_schema.timelines (name)
  VALUES
    ('1 month'),
    ('6 months'),
    ('1 year');

    

  INSERT INTO
    dbtable_schema.time_units (name)
  VALUES
    ('minute'),
    ('hour'),
    ('day'),
    ('week'),
    ('month'),
    ('year');
    




















    ------------------------------



    

	CREATE OR REPLACE FUNCTION enforce_photo_count() RETURNS trigger AS $$
	DECLARE
			max_photo_count INTEGER := 10;
			photo_count INTEGER := 0;
			must_check BOOLEAN := false;
	BEGIN
			IF TG_OP = 'INSERT' THEN
					must_check := true;
			END IF;

			IF TG_OP = 'UPDATE' THEN
					IF (NEW.owner != OLD.owner) THEN
							must_check := true;
					END IF;
			END IF;

			IF must_check THEN
					-- prevent concurrent inserts from multiple transactions
					LOCK TABLE photos IN EXCLUSIVE MODE;

					SELECT INTO photo_count COUNT(*) 
					FROM photos 
					WHERE owner = NEW.owner;

					IF photo_count >= max_photo_count THEN
							RAISE EXCEPTION 'Cannot insert more than % photos for each user.', max_photo_count;
					END IF;
			END IF;

			RETURN NEW;
	END;
	$$ LANGUAGE plpgsql;


	CREATE TRIGGER enforce_photo_count 
			BEFORE INSERT OR UPDATE ON photos
			FOR EACH ROW EXECUTE PROCEDURE enforce_photo_count();